{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "calculateMarketplaceFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_contractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "calculatePrimarySaleFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_contractAddress",
						"type": "address"
					}
				],
				"name": "getERC721ContractPrimarySaleFeePercentage",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMarketplaceFeePercentage",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMarketplaceMaxValue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMarketplaceMinValue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_contractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "hasERC721TokenSold",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_contractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_hasSold",
						"type": "bool"
					}
				],
				"name": "markERC721Token",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"calculateMarketplaceFee(uint256)": {
					"details": "Utility function for calculating the marketplace fee for given amount of wei.",
					"params": {
						"_amount": "uint256 wei amount."
					},
					"returns": {
						"_0": "uint256 wei fee."
					}
				},
				"calculatePrimarySaleFee(address,uint256)": {
					"details": "Utility function for calculating the primary sale fee for given amount of wei",
					"params": {
						"_amount": "uint256 wei amount.",
						"_contractAddress": "address ERC721Contract address."
					},
					"returns": {
						"_0": "uint256 wei fee."
					}
				},
				"getERC721ContractPrimarySaleFeePercentage(address)": {
					"details": "Get the primary sale fee percentage for a specific ERC721 contract.",
					"params": {
						"_contractAddress": "address ERC721Contract address."
					},
					"returns": {
						"_0": "uint8 wei primary sale fee."
					}
				},
				"getMarketplaceFeePercentage()": {
					"details": "Get the marketplace fee percentage.",
					"returns": {
						"_0": "uint8 wei fee."
					}
				},
				"getMarketplaceMaxValue()": {
					"details": "Get the max value to be used with the marketplace.",
					"returns": {
						"_0": "uint256 wei value."
					}
				},
				"getMarketplaceMinValue()": {
					"details": "Get the max value to be used with the marketplace.",
					"returns": {
						"_0": "uint256 wei value."
					}
				},
				"hasERC721TokenSold(address,uint256)": {
					"details": "Check whether the ERC721 token has sold at least once.",
					"params": {
						"_contractAddress": "address ERC721Contract address.",
						"_tokenId": "uint256 token ID."
					},
					"returns": {
						"_0": "bool of whether the token has sold."
					}
				},
				"markERC721Token(address,uint256,bool)": {
					"details": "Mark a token as sold. Requirements: - `_contractAddress` cannot be the zero address.",
					"params": {
						"_contractAddress": "address ERC721Contract address.",
						"_hasSold": "bool of whether the token should be marked sold or not.",
						"_tokenId": "uint256 token ID."
					}
				}
			},
			"title": "IMarketplaceSettings Settings governing a marketplace.",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Marketplace/IMarketplaceSettings.sol": "IMarketplaceSettings"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Marketplace/IMarketplaceSettings.sol": {
			"keccak256": "0x78f9252a99678e4af054837ccc0d286a9ce9b97a1527f09fcef281958a4fe46c",
			"urls": [
				"bzz-raw://7a53f855607c64ce2dad143f158c0fb1f96538f4ab0ee5034596b3f4076a93e3",
				"dweb:/ipfs/QmYcchGhNbEAXzXHSmJvsogo3c4hrryTQQqmnWHUSvfUT1"
			]
		}
	},
	"version": 1
}