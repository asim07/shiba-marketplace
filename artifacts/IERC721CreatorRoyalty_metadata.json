{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_contractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "calculateRoyaltyFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_contractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "getERC721TokenRoyaltyPercentage",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_contractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "tokenCreator",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"calculateRoyaltyFee(address,uint256,uint256)": {
					"details": "Utililty function to calculate the royalty fee for a token.",
					"params": {
						"_amount": "uint256 wei amount.",
						"_contractAddress": "address ERC721Contract address.",
						"_tokenId": "uint256 token ID."
					},
					"returns": {
						"_0": "uint256 wei fee."
					}
				},
				"getERC721TokenRoyaltyPercentage(address,uint256)": {
					"details": "Get the royalty fee percentage for a specific ERC721 contract.",
					"params": {
						"_contractAddress": "address ERC721Contract address.",
						"_tokenId": "uint256 token ID."
					},
					"returns": {
						"_0": "uint8 wei royalty fee."
					}
				},
				"tokenCreator(address,uint256)": {
					"details": "Gets the creator of the token",
					"params": {
						"_contractAddress": "address of the ERC721 contract",
						"_tokenId": "uint256 ID of the token"
					},
					"returns": {
						"_0": "address of the creator"
					}
				}
			},
			"title": "IERC721CreatorRoyalty Token level royalty interface.",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"IERC721CreatorRoyalty.sol": "IERC721CreatorRoyalty"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"IERC721CreatorRoyalty.sol": {
			"keccak256": "0xb213db0f429673b27cdb5e65a97e86d49bd9d23dffa1cd0b67050e81f99a632d",
			"urls": [
				"bzz-raw://0dd753aebf7cf78ff073d02e27fe11a3819384cb1273e6928dba7e35a442cd47",
				"dweb:/ipfs/QmW2Hx4DAt4AwWXrhWFUHSqZQJPhWJZrSz5y8z8pTVhpY5"
			]
		},
		"IERC721TokenCreator.sol": {
			"keccak256": "0xe404c8ed80c68cea7adf1fa4cbfc63f2131ec8945f991964a1d01b01a8a8170b",
			"urls": [
				"bzz-raw://3d4e5a09daa11a08c920ac43a2a0b44ff3013ad0ca83fc583b7e11b168c710cc",
				"dweb:/ipfs/QmTPXxH4QWkfLM9P8jHYMvQvRsQaYLBPfC8Jq72DppGLps"
			]
		}
	},
	"version": 1
}